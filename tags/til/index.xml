<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TIL on today is tomorrow's past</title><link>https://ingo-richter.io/tags/til/</link><description>Recent content in TIL on today is tomorrow's past</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 10 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ingo-richter.io/tags/til/index.xml" rel="self" type="application/rss+xml"/><item><title>Swiftui Learn by Doing</title><link>https://ingo-richter.io/post/2022/swiftui-learn-by-doing/</link><pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate><guid>https://ingo-richter.io/post/2022/swiftui-learn-by-doing/</guid><description>SwiftUI - Learn by doing I briefly started to use SwiftUI in 2021. I wanted to learn about the fundamentals and how SwiftUI differs from the traditional iOS and macOS development frameworks.
Over the next couple of weeks, I will provide tutorials to help others learn SwiftUI by building some apps. I&amp;rsquo;m going to start building a Minesweeper clone. Minesweeper is a simple game that I loved to play when it was released with Windows 3.</description></item><item><title>TIL - Organize a Folder of Thousands of Images Into Subfolders</title><link>https://ingo-richter.io/post/2021/organize-a-folder-of-thousands-of-images-into-subfolders/</link><pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate><guid>https://ingo-richter.io/post/2021/organize-a-folder-of-thousands-of-images-into-subfolders/</guid><description>Reorg Time I use Nextclouds image upload feature to backup all photos from my phone. I recently discovered that you could upload pictures from your phone into subfolders in the YEAR/MONTH/DAY/picturefile format.
After switching this feature on, I realized that all my previously uploaded 3000+ images and short videos lie flat in the Pictures folder. I needed a solution to organize all existing photos into the same subfolder structure.
I was thinking about writing a shell script and using ExifTool to read the EXIF metadata and move the pictures into their respective folder location based on their creation date.</description></item><item><title>Resize APFS Container in macOS 10.13 VMWare Image</title><link>https://ingo-richter.io/post/til-resize-apfs-container-in-macos-10.13-vmware-image/</link><pubDate>Wed, 07 Mar 2018 22:45:27 -0700</pubDate><guid>https://ingo-richter.io/post/til-resize-apfs-container-in-macos-10.13-vmware-image/</guid><description>Resize VMWare Disk size VMWare provides an option to resize the Hard disk of a VM. The Settings dialog provides this option under Hard Disk. If the VM is not running and you don&amp;rsquo;t have a snapshot, the slider is enabled, and you can size the disk to your desired size.
I wanted to increase the size of the hard disk from 50 GB to 100 GB. That&amp;rsquo;s a matter of seconds, and I was ready to go.</description></item><item><title>Effective Git - Worktrees</title><link>https://ingo-richter.io/post/effective-git-worktrees/</link><pubDate>Wed, 10 May 2017 21:19:27 -0700</pubDate><guid>https://ingo-richter.io/post/effective-git-worktrees/</guid><description>You know this situation: you are working on new feature branch of your product. A bunch of files has been changed, nothing has settled yet and lots of uncommitted changes. This is how work in progress looks like. Everything could be alright, but then you are asked to check out that high priority issue that a customer reported.
What I did in this situation
stash my changes with git stash save and provide a meaningful message for when I have to unstash- my changes changes branches and pull from master build the product repro the issue create a new branch for the fix implement the fix and push to the newly created branch let somebody else verify the fix go back to my previous branch git stash pop my work in progress continue working on the feature Introducing Worktrees I was reading git release notes, and I stumbled upon something I haven’t heard before in the git context: worktree.</description></item><item><title>Efficient JavaScript Unit Testing with Jest and Snapshots</title><link>https://ingo-richter.io/post/efficient-unit-testing-with-jest-and-snapshots/</link><pubDate>Thu, 06 Apr 2017 11:55:51 -0700</pubDate><guid>https://ingo-richter.io/post/efficient-unit-testing-with-jest-and-snapshots/</guid><description>Let&amp;rsquo;s start with a bold statement:
We all love to write unit great tests for our code. More or less.
— Unknown Programmer
Writing unit tests for my code mostly follows this pattern
Write a test and make it fail (red) Write the function to fix the test (implement function) Start over with step 1 For one of my projects, I was using jest. It&amp;rsquo;s fast now, and it has several features that I highly value.</description></item><item><title>TIL - Reactjs optimization that cost me some time</title><link>https://ingo-richter.io/post/reactjs-optimizations/</link><pubDate>Mon, 15 Aug 2016 23:15:51 -0700</pubDate><guid>https://ingo-richter.io/post/reactjs-optimizations/</guid><description>I was building a Reactjs component, that should toggle between two child components.
&amp;lt;Toggle&amp;gt; &amp;lt;Comp1&amp;gt; &amp;lt;Comp2&amp;gt; &amp;lt;/Toggle&amp;gt; The render method of Toggle looked like this
render() { const content = React.Children.count(this.props.children) &amp;gt; 0 ? this.props.children[0] : this.props.children[1]; return ( ${content} ); } Unfortunately, this didn’t work (index out of bounds), when I passed only one component instead of two. This doesn’t make sense since the Toggle is supposed to toggle between two components.</description></item><item><title>TIL - where to put ant-contrib</title><link>https://ingo-richter.io/post/til-where-to-put-ant-contrib/</link><pubDate>Thu, 16 Jun 2016 20:15:51 -0700</pubDate><guid>https://ingo-richter.io/post/til-where-to-put-ant-contrib/</guid><description>I was testing an ant based build script change today. And I thought ant was already retired.
Running the script led to a lot of warnings about a missing library. I asked the person, if there are any dependencies for ant-contrib. His response was &amp;#34;yes, you need to install ant-contrib&amp;#34;.
First of all, I didn’t have ant installed. But that was easy with
irichter@irichter-MacBookPro:~ brew install ant Unfortunately, ant-contrib wasn’t available via homebrew, so I had to download it and place it…​ where?</description></item></channel></rss>