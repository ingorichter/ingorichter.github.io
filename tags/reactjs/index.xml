<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reactjs on today is tomorrow's past</title><link>https://ingo-richter.io/tags/reactjs/</link><description>Recent content in Reactjs on today is tomorrow's past</description><generator>Hugo</generator><language>en</language><managingEditor>ingo@ingo-richter.io (Ingo Richter)</managingEditor><webMaster>ingo@ingo-richter.io (Ingo Richter)</webMaster><lastBuildDate>Sun, 12 Aug 2018 16:38:57 -0700</lastBuildDate><atom:link href="https://ingo-richter.io/tags/reactjs/index.xml" rel="self" type="application/rss+xml"/><item><title>Testing raw DOM Event Handler in Reactjs</title><link>https://ingo-richter.io/post/testing-dom-event-handler-in-reactjs/</link><pubDate>Sun, 12 Aug 2018 16:38:57 -0700</pubDate><author>ingo@ingo-richter.io (Ingo Richter)</author><guid>https://ingo-richter.io/post/testing-dom-event-handler-in-reactjs/</guid><description>This is a reminder to myself. And to anybody who needs a creative solution to test an event handler directly attached to a DOM node of a react component.
Last Friday I ran into the situation to test my react component to ensure that the state updates correctly when the pointerenter and pointerleave event fires. Testing for these events is usually no big deal when you use reactjs in one way or the other (either web or native).</description></item><item><title>ReactJS San Francisco Meetup at Zendesk</title><link>https://ingo-richter.io/post/reactjs_meetup_zendesk/</link><pubDate>Sat, 14 Apr 2018 10:15:27 -0700</pubDate><author>ingo@ingo-richter.io (Ingo Richter)</author><guid>https://ingo-richter.io/post/reactjs_meetup_zendesk/</guid><description>ReactJS San Francisco Meetup at Zendesk Thursday night I attended the SF ReactJS Meetup at Zendesk.
First of all, there were some noticeable difference to some other meetups I went to in the past,
No need to sign No need to sign an NDA before entering the premise No Pizza! The office space is gorgeous. Grass on the wall, stairs to sit on and a small atrium like opening from the basement to the first floor to bring some light to the lower level.</description></item><item><title>TIL - Reactjs optimization that cost me some time</title><link>https://ingo-richter.io/post/reactjs-optimizations/</link><pubDate>Mon, 15 Aug 2016 23:15:51 -0700</pubDate><author>ingo@ingo-richter.io (Ingo Richter)</author><guid>https://ingo-richter.io/post/reactjs-optimizations/</guid><description>I was building a Reactjs component, that should toggle between two child components.
&amp;lt;Toggle&amp;gt; &amp;lt;Comp1&amp;gt; &amp;lt;Comp2&amp;gt; &amp;lt;/Toggle&amp;gt; The render method of Toggle looked like this render() { const content = React.Children.count(this.props.children) &amp;gt; 0 ? this.props.children[0] : this.props.children[1]; return ( ${content} ); }
Unfortunately, this didn&amp;rsquo;t work (index out of bounds), when I passed only one component instead of two. This doesn&amp;rsquo;t make sense since the Toggle is supposed to toggle between two components.</description></item></channel></rss>