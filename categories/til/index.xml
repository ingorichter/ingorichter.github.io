<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TIL on today is tomorrow's past</title><link>https://ingo-richter.io/categories/til/</link><description>Recent content in TIL on today is tomorrow's past</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 05 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ingo-richter.io/categories/til/index.xml" rel="self" type="application/rss+xml"/><item><title>3d Printed Axidraw Easel Spacer</title><link>https://ingo-richter.io/post/2022/3d-printed-axidraw-easel-spacer/</link><pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate><guid>https://ingo-richter.io/post/2022/3d-printed-axidraw-easel-spacer/</guid><description>Designing a Spacer for my AxiDraw Plotter I have an AxiDraw V3/A3 Penplotter that I bought to satisfy a desire to own such a fantastic machine. It started in my teen years working with HP Plotters in our university lab at the TUHH. I could not afford an HP Plotter back in the day, so that desire was never satisfied.
Jumping forward to today: I bought the AxiDraw Plotter in the Summer of 2021, and I ordered the Magnetic Easel.</description></item><item><title>TIL - Adding Swift Code to Objective-C Project</title><link>https://ingo-richter.io/post/2022/til-adding-swift-code-to-objective-c-project/</link><pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate><guid>https://ingo-richter.io/post/2022/til-adding-swift-code-to-objective-c-project/</guid><description>TL;DR Adding Swift Code to Objective-C Project
Ensure your Swift class derives direct or indirect from NSObject Ensure your Swift class is public to ensure the YourProjectName-Swift.h header generation Prefix the class to expose it to Objective-C. Any Property or method needs its own @objc annotation to be visible from Objective-C. Use the @objcMembers annotation to expose all properties and methods of the Swift class Reminder for myself I learned a couple of essential things about mixing Objective-C and Swift in one project.</description></item><item><title>Adding Multiple Files to Macos Gatekeeper</title><link>https://ingo-richter.io/post/2022/adding-multiple-files-to-macos-gatekeeper/</link><pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate><guid>https://ingo-richter.io/post/2022/adding-multiple-files-to-macos-gatekeeper/</guid><description>The Gatekeeper Before I forget what I learned today, I better write it down.
Gatekeeper on macOS ensures that properly signed and authentic apps and other executable files, including dylibs and kexts, are executed on your Mac. But if you want to execute an open-source tool installed by brew or some other way on your machine, you will usually see something like this confirmation dialog. In this case, for an app FSNotes installed with brew.</description></item><item><title>Hugo, Themes and My Theme Customization</title><link>https://ingo-richter.io/post/2022/hugo-themes-and-my-theme-customization/</link><pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate><guid>https://ingo-richter.io/post/2022/hugo-themes-and-my-theme-customization/</guid><description>TL;DR Hugo&amp;rsquo;s file lookup magic was biting me and was causing the 3rd party template to use a file with the same name from my blog assets directory.
How to waste lots of hours I use Hugo for my Blog with a custom theme hugo future imperfect slim.
I made some customizations to my blog a while ago. I added baguetteBox.js for better image galleries and lazySizes to better support different image sizes in the gallery.</description></item><item><title>Swiftui Learn by Doing</title><link>https://ingo-richter.io/post/2022/swiftui---learn-by-doing/</link><pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate><guid>https://ingo-richter.io/post/2022/swiftui---learn-by-doing/</guid><description>SwiftUI - Learn by doing I briefly started to use SwiftUI in 2021. I wanted to learn about the fundamentals and how SwiftUI differs from the traditional iOS and macOS development frameworks.
Over the next couple of weeks, I will provide tutorials to help others learn SwiftUI by building some apps. I&amp;rsquo;m going to start building a Minesweeper clone. Minesweeper is a simple game that I loved to play when it was released with Windows 3.</description></item><item><title>Happy Thanksgiving ðŸ¦ƒ</title><link>https://ingo-richter.io/post/2021/happy-thanksgiving/</link><pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate><guid>https://ingo-richter.io/post/2021/happy-thanksgiving/</guid><description>Happy Thanksgiving I wish everybody a great day with their families and friends. I hope you can all meet in person and make up for last year. I&amp;rsquo;m grateful for having a family and friends, a roof over my head, and a fulfilling job.
Happy Turkey Day, or whatever suits your mood. Stay safe wherever you are and get some time for yourself.
Cheers ðŸ¥‚</description></item><item><title>TIL - Organize a Folder of Thousands of Images Into Subfolders</title><link>https://ingo-richter.io/post/2021/organize-a-folder-of-thousands-of-images-into-subfolders/</link><pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate><guid>https://ingo-richter.io/post/2021/organize-a-folder-of-thousands-of-images-into-subfolders/</guid><description>Reorg Time I use Nextclouds image upload feature to backup all photos from my phone. I recently discovered that you could upload pictures from your phone into subfolders in the YEAR/MONTH/DAY/picturefile format.
After switching this feature on, I realized that all my previously uploaded 3000+ images and short videos lie flat in the Pictures folder. I needed a solution to organize all existing photos into the same subfolder structure.
I was thinking about writing a shell script and using ExifTool to read the EXIF metadata and move the pictures into their respective folder location based on their creation date.</description></item><item><title>TIL - Reactjs optimization that cost me some time</title><link>https://ingo-richter.io/post/reactjs-optimizations/</link><pubDate>Mon, 15 Aug 2016 23:15:51 -0700</pubDate><guid>https://ingo-richter.io/post/reactjs-optimizations/</guid><description>I was building a Reactjs component, that should toggle between two child components.
&amp;lt;Toggle&amp;gt; &amp;lt;Comp1&amp;gt; &amp;lt;Comp2&amp;gt; &amp;lt;/Toggle&amp;gt; The render method of Toggle looked like this
render() { const content = React.Children.count(this.props.children) &amp;gt; 0 ? this.props.children[0] : this.props.children[1]; return ( ${content} ); } Unfortunately, this didnâ€™t work (index out of bounds), when I passed only one component instead of two. This doesnâ€™t make sense since the Toggle is supposed to toggle between two components.</description></item></channel></rss>