<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TIL on today is tomorrow's past</title><link>https://ingo-richter.io/categories/til/</link><description>Recent content in TIL on today is tomorrow's past</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 25 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ingo-richter.io/categories/til/index.xml" rel="self" type="application/rss+xml"/><item><title>Happy Thanksgiving ðŸ¦ƒ</title><link>https://ingo-richter.io/post/2021/happy-thanksgiving/</link><pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate><guid>https://ingo-richter.io/post/2021/happy-thanksgiving/</guid><description>Happy Thanksgiving I wish everybody a great day with their families and friends. I hope you can all meet in person and make up for last year. I&amp;rsquo;m grateful for having a family and friends, a roof over my head, and a fulfilling job.
Happy Turkey Day, or whatever suits your mood. Stay safe wherever you are and get some time for yourself.
Cheers ðŸ¥‚</description></item><item><title>TIL - Organize a Folder of Thousands of Images Into Subfolders</title><link>https://ingo-richter.io/post/2021/organize-a-folder-of-thousands-of-images-into-subfolders/</link><pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate><guid>https://ingo-richter.io/post/2021/organize-a-folder-of-thousands-of-images-into-subfolders/</guid><description>Reorg Time I use Nextclouds image upload feature to backup all photos from my phone. I recently discovered that you could upload pictures from your phone into subfolders in the YEAR/MONTH/DAY/picturefile format.
After switching this feature on, I realized that all my previously uploaded 3000+ images and short videos lie flat in the Pictures folder. I needed a solution to organize all existing photos into the same subfolder structure.
I was thinking about writing a shell script and using ExifTool to read the EXIF metadata and move the pictures into their respective folder location based on their creation date.</description></item><item><title>TIL - Reactjs optimization that cost me some time</title><link>https://ingo-richter.io/post/reactjs-optimizations/</link><pubDate>Mon, 15 Aug 2016 23:15:51 -0700</pubDate><guid>https://ingo-richter.io/post/reactjs-optimizations/</guid><description>I was building a Reactjs component, that should toggle between two child components.
&amp;lt;Toggle&amp;gt; &amp;lt;Comp1&amp;gt; &amp;lt;Comp2&amp;gt; &amp;lt;/Toggle&amp;gt; The render method of Toggle looked like this
render() { const content = React.Children.count(this.props.children) &amp;gt; 0 ? this.props.children[0] : this.props.children[1]; return ( ${content} ); } Unfortunately, this didnâ€™t work (index out of bounds), when I passed only one component instead of two. This doesnâ€™t make sense since the Toggle is supposed to toggle between two components.</description></item></channel></rss>