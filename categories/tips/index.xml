<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tips on today is tomorrow's past</title><link>https://ingo-richter.io/categories/tips/</link><description>Recent content in Tips on today is tomorrow's past</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>ingo@ingo-richter.io (Ingo Richter)</managingEditor><webMaster>ingo@ingo-richter.io (Ingo Richter)</webMaster><lastBuildDate>Thu, 10 Feb 2022 00:00:00 -0800</lastBuildDate><atom:link href="https://ingo-richter.io/categories/tips/index.xml" rel="self" type="application/rss+xml"/><item><title>Adding Multiple Files to Macos Gatekeeper</title><link>https://ingo-richter.io/post/2022/adding-multiple-files-to-macos-gatekeeper/</link><pubDate>Thu, 10 Feb 2022 00:00:00 -0800</pubDate><author>ingo@ingo-richter.io (Ingo Richter)</author><guid>https://ingo-richter.io/post/2022/adding-multiple-files-to-macos-gatekeeper/</guid><description>The Gatekeeper Before I forget what I learned today, I better write it down.
Gatekeeper on macOS ensures that properly signed and authentic apps and other executable files, including dylibs and kexts, are executed on your Mac. But if you want to execute an open-source tool installed by brew or some other way on your machine, you will usually see something like this confirmation dialog. In this case, for an app FSNotes installed with brew.</description></item><item><title>Testing raw DOM Event Handler in Reactjs</title><link>https://ingo-richter.io/post/testing-dom-event-handler-in-reactjs/</link><pubDate>Sun, 12 Aug 2018 16:38:57 -0700</pubDate><author>ingo@ingo-richter.io (Ingo Richter)</author><guid>https://ingo-richter.io/post/testing-dom-event-handler-in-reactjs/</guid><description>This is a reminder to myself. And to anybody who needs a creative solution to test an event handler directly attached to a DOM node of a react component.
Last Friday I ran into the situation to test my react component to ensure that the state updates correctly when the pointerenter and pointerleave event fires. Testing for these events is usually no big deal when you use reactjs in one way or the other (either web or native).</description></item><item><title>Resize APFS Container in macOS 10.13 VMWare Image</title><link>https://ingo-richter.io/post/til-resize-apfs-container-in-macos-10.13-vmware-image/</link><pubDate>Wed, 07 Mar 2018 22:45:27 -0700</pubDate><author>ingo@ingo-richter.io (Ingo Richter)</author><guid>https://ingo-richter.io/post/til-resize-apfs-container-in-macos-10.13-vmware-image/</guid><description>Resize VMWare Disk size VMWare provides an option to resize the Hard disk of a VM. The Settings dialog provides this option under Hard Disk. If the VM is not running and you don&amp;rsquo;t have a snapshot, the slider is enabled, and you can size the disk to your desired size.
I wanted to increase the size of the hard disk from 50 GB to 100 GB. That&amp;rsquo;s a matter of seconds, and I was ready to go.</description></item><item><title>TIL - SIGINFO is awesome</title><link>https://ingo-richter.io/post/til---siginfo-is-awesome/</link><pubDate>Tue, 11 Oct 2016 09:15:51 -0700</pubDate><author>ingo@ingo-richter.io (Ingo Richter)</author><guid>https://ingo-richter.io/post/til---siginfo-is-awesome/</guid><description>Today I learnt something really awesome. If you use a Unix based operating system, then you will be able to send any process a signal. This might be either Ctrl+C or SIGINT to interrupt that process. Or you can send SIGINFO to report the progress of it’s operation. Why this is awesome? Did you ever copy a huge amount of data and cp didn’t tell you how much has data has been copied so far?</description></item><item><title>TIL - Reactjs optimization that cost me some time</title><link>https://ingo-richter.io/post/reactjs-optimizations/</link><pubDate>Mon, 15 Aug 2016 23:15:51 -0700</pubDate><author>ingo@ingo-richter.io (Ingo Richter)</author><guid>https://ingo-richter.io/post/reactjs-optimizations/</guid><description>I was building a Reactjs component, that should toggle between two child components.
&amp;lt;Toggle&amp;gt; &amp;lt;Comp1&amp;gt; &amp;lt;Comp2&amp;gt; &amp;lt;/Toggle&amp;gt; The render method of Toggle looked like this
render() { const content = React.Children.count(this.props.children) &amp;gt; 0 ? this.props.children[0] : this.props.children[1]; return ( ${content} ); } Unfortunately, this didn’t work (index out of bounds), when I passed only one component instead of two. This doesn’t make sense since the Toggle is supposed to toggle between two components.</description></item><item><title>TIL - where to put ant-contrib</title><link>https://ingo-richter.io/post/til-where-to-put-ant-contrib/</link><pubDate>Thu, 16 Jun 2016 20:15:51 -0700</pubDate><author>ingo@ingo-richter.io (Ingo Richter)</author><guid>https://ingo-richter.io/post/til-where-to-put-ant-contrib/</guid><description>I was testing an ant based build script change today. And I thought ant was already retired.
Running the script led to a lot of warnings about a missing library. I asked the person, if there are any dependencies for ant-contrib. His response was &amp;#34;yes, you need to install ant-contrib&amp;#34;.
First of all, I didn’t have ant installed. But that was easy with
irichter@irichter-MacBookPro:~ brew install ant Unfortunately, ant-contrib wasn’t available via homebrew, so I had to download it and place it…​ where?</description></item></channel></rss>