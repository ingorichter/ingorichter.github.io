<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tricks on Today is Tomorrow's Past</title><link>https://ingo-richter.io/blog/tricks/</link><description>Recent content in Tricks on Today is Tomorrow's Past</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© 2025 Ingo Richter</copyright><lastBuildDate>Wed, 07 Mar 2018 22:45:27 -0700</lastBuildDate><atom:link href="https://ingo-richter.io/blog/tricks/index.xml" rel="self" type="application/rss+xml"/><item><title>Resize APFS Container in macOS 10.13 VMWare Image</title><link>https://ingo-richter.io/post/til-resize-apfs-container-in-macos-10/</link><pubDate>Wed, 07 Mar 2018 22:45:27 -0700</pubDate><guid>https://ingo-richter.io/post/til-resize-apfs-container-in-macos-10/</guid><description>&lt;h2 id="resize-vmware-disk-size">Resize VMWare Disk size&lt;/h2>
&lt;p>VMWare provides an option to resize the Hard disk of a VM. The Settings dialog provides this option under &lt;strong>Hard Disk&lt;/strong>.
If the VM is not running and you don&amp;rsquo;t have a snapshot, the slider is enabled, and you can size the disk to your desired size.&lt;/p></description></item><item><title>Effective Git - Worktrees</title><link>https://ingo-richter.io/post/effective-git---worktrees/</link><pubDate>Wed, 10 May 2017 21:19:27 -0700</pubDate><guid>https://ingo-richter.io/post/effective-git---worktrees/</guid><description>&lt;p>You know this situation: you are working on new feature branch of your product. A bunch of files has been changed, nothing has settled yet and lots of uncommitted changes. This is how work in progress looks like. Everything could be alright, but then you are asked to check out that high priority issue that a customer reported.&lt;/p></description></item><item><title>Efficient JavaScript Unit Testing with Jest and Snapshots</title><link>https://ingo-richter.io/post/efficient-unit-testing-with-jest-and-snapshots/</link><pubDate>Thu, 06 Apr 2017 11:55:51 -0700</pubDate><guid>https://ingo-richter.io/post/efficient-unit-testing-with-jest-and-snapshots/</guid><description>&lt;p>Let&amp;rsquo;s start with a bold statement:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>We all love to write unit great tests for our code. More or less.&lt;/strong>&lt;/p>
&lt;p>— Unknown Programmer&lt;/p>&lt;/blockquote>
&lt;p>Writing unit tests for my code mostly follows this pattern&lt;/p>
&lt;ol>
&lt;li>Write a test and make it fail (red)&lt;/li>
&lt;li>Write the function to fix the test (implement function)&lt;/li>
&lt;li>Start over with step 1&lt;/li>
&lt;/ol>
&lt;p>For one of my projects, I was using &lt;a href="https://facebook.github.io/jest/">jest&lt;/a>. It&amp;rsquo;s fast now, and it has several features that I highly value. Most of them integrated code coverage and Snapshot testing.&lt;/p></description></item></channel></rss>