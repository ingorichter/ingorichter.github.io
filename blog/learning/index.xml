<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>learning on Today is Tomorrow's Past</title><link>https://ingo-richter.io/blog/learning/</link><description>Recent content in learning on Today is Tomorrow's Past</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Â© 2025 Ingo Richter</copyright><lastBuildDate>Mon, 10 Jan 2022 00:00:00 -0800</lastBuildDate><atom:link href="https://ingo-richter.io/blog/learning/index.xml" rel="self" type="application/rss+xml"/><item><title>Swiftui Learn by Doing</title><link>https://ingo-richter.io/post/2022/swiftui---learn-by-doing/</link><pubDate>Mon, 10 Jan 2022 00:00:00 -0800</pubDate><guid>https://ingo-richter.io/post/2022/swiftui---learn-by-doing/</guid><description>&lt;h2 id="swiftui---learn-by-doing"&gt;SwiftUI - Learn by doing&lt;/h2&gt;
&lt;p&gt;I briefly started to use SwiftUI in 2021. I wanted to learn about the fundamentals and how SwiftUI differs from the traditional iOS and macOS development frameworks.&lt;/p&gt;
&lt;p&gt;Over the next couple of weeks, I will provide tutorials to help others learn SwiftUI by building some apps. I&amp;rsquo;m going to start building a Minesweeper clone. Minesweeper is a simple game that I loved to play when it was released with Windows 3.1 in 1990. The game idea itself is older, according to &lt;a href="https://en.wikipedia.org/wiki/Minesweeper_(video_game"&gt;Wikipedia&lt;/a&gt;.
Building it for iOS and macOS is a great way to use SwiftUI and share code among both platforms. And creating an old game on a modern platform seemed to be a great exercise. Learning how to make something look like a Windows Program on macOS and iOS seemed like a fun way to learn UI styling and bend code to your will.&lt;/p&gt;</description></item></channel></rss>